function seasons() {
    let mounthNumber = Number(prompt('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞'));
switch (mounthNumber) {
    case 1:
        alert('–Ø–Ω–≤–∞—Ä—å - –∑–∏–º–∞ ‚õÑ')
        break;
    case 2:
        alert('–§–µ–≤—Ä–∞–ª—å - –∑–∏–º–∞ ‚õÑ')
        break;
    case 3:
        alert('–ú–∞—Ä—Ç -  –≤–µ—Å–Ω–∞ üíê')
        break;
    case 4:
        alert('–ê–ø—Ä–µ–ª—å -  –≤–µ—Å–Ω–∞ üíê')
        break;
    case 5:
        alert('–ú–∞–π -  –≤–µ—Å–Ω–∞ üíê')
        break;
    case 6:
        alert('–ò—é–Ω—å -  –ª–µ—Ç–æ üåû')
        break;
    case 7:
        alert('–ò—é–ª—å -  –ª–µ—Ç–æ üåû')
        break;
    case 8:
        alert('–ê–≤–≥—É—Å—Ç -  –ª–µ—Ç–æ üåû')
        break;
    case 9:
        alert('–°–µ–Ω—Ç—è–±—Ä—å -  –æ—Å–µ–Ω—å üçÇ')
        break;
    case 10:
        alert('–û–∫—Ç—è–±—Ä—å -  –æ—Å–µ–Ω—å üçÇ')
        break;
    case 11:
        alert('–ù–æ—è–±—Ä—å -  –æ—Å–µ–Ω—å üçÇ')
        break;
    case 12:
        alert('–î–µ–∫–∞–±—Ä—å - –∑–∏–º–∞ ‚õÑ')
        break; 
    default:
        alert('–ß—Ç–æ —Ç–æ –Ω–µ —Ç–æ üòß')
        break;
}
}

function memory() {
    const words = ['–Ø–±–ª–æ–∫–æ', '–ì—Ä—É—à–∞', '–î—ã–Ω—è', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–ü–µ—Ä—Å–∏–∫', '–ê–ø–µ–ª—å—Å–∏–Ω', '–ú–∞–Ω–¥–∞—Ä–∏–Ω'];
    words.sort(() => Math.random() - 0.5);
    let wordsInStringForAlert = words.join(', ')
    alert(wordsInStringForAlert);
    let firstWord = words.shift();
    let secondWord = words.pop();
    let regexp = /^[–∞-—è–ê-–Ø]*$/;
    let firstWordUser = prompt('–ö–∞–∫–æ–µ –±—ã–ª–æ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ?');
    if (regexp.test(firstWordUser)) {
        let secondWordUser = prompt('–ö–∞–∫–æ–µ –±—ã–ª–æ –≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ?');
        if (regexp.test(secondWordUser)) {
            if (firstWord.toLowerCase() === firstWordUser.toLowerCase() && secondWord.toLowerCase() === secondWordUser.toLowerCase()) {
                alert('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –£ –≤–∞—Å —Ñ–µ–Ω–æ–º–µ–Ω–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å! –í—ã –ø–æ–±–µ–¥–∏–ª–∏! üòÜ');
            } else if (firstWord.toLowerCase() === firstWordUser.toLowerCase() || secondWord.toLowerCase() === secondWordUser.toLowerCase()) {
                alert('–í—ã –±—ã–ª–∏ –±–ª–∏–∑–∫–∏ –∫ –ø–æ–±–µ–¥–µ! üòâ');
            } else {
                alert('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò≠');
            }
        } else {
            alert('–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ üòï');
        }
    } else {
        alert('–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ üòï');
    }   
}